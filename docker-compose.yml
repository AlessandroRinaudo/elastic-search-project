version: "3.0"
services:
  api:
    container_name: api-container
    build:
      context : .
      dockerfile : app/API.Dockerfile
    environment:
      - PRODENV=False
    ports:
      - 80:80
    networks:
      - net
    volumes:
      - ./:/code

  logstash:
    container_name: logs-container
    image: logstash:7.14.2
    volumes:
      - ./logstash:/usr/share/logstash/pipeline/
    command: logstash -f /usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    networks:
      - net
    ports:
      - "5959:5959"

  kibana:
    container_name: kb-container
    image: docker.elastic.co/kibana/kibana:7.11.0
    environment:
      - ELASTICSEARCH_HOSTS=http://es-container:9200
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    networks:
      - net

  elasticsearch:
    container_name: es-container
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    healthcheck:
      test: curl --fail -s es-container:9200 || exit 1
      interval: 1s
      timeout: 10s
      retries: 3
    ports:
      - 9200:9200
    networks:
      - net

  sampledata:
    container_name: load-sample-cv
    build:
      context : .
      dockerfile : samplaDataScript/SDS.Dockerfile
    command: python sds.py
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - net

networks:
  net:
    driver: bridge
